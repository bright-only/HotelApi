// <auto-generated />
using HotelListingApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelListingApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220822040052_HotelDatabaseSeeding")]
    partial class HotelDatabaseSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HotelListingApi.Data.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "JAMAICA",
                            CountryShortName = "JM"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryName = "BAHAMAS",
                            CountryShortName = "BS"
                        },
                        new
                        {
                            CountryId = 3,
                            CountryName = "CAYMAN ISLAND",
                            CountryShortName = "CI"
                        });
                });

            modelBuilder.Entity("HotelListingApi.Data.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("HotelAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HotelRating")
                        .HasColumnType("float");

                    b.HasKey("HotelId");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            CountryId = 1,
                            HotelAddress = "NEGRIL",
                            HotelName = "SANDALS RESORT AND SPA",
                            HotelRating = 5.0
                        },
                        new
                        {
                            HotelId = 2,
                            CountryId = 3,
                            HotelAddress = "GEORGE TOWN",
                            HotelName = "COMFORT SUITE",
                            HotelRating = 4.5
                        },
                        new
                        {
                            HotelId = 3,
                            CountryId = 2,
                            HotelAddress = "NASSUA",
                            HotelName = "GRAND PALLDIUM",
                            HotelRating = 3.0
                        });
                });

            modelBuilder.Entity("HotelListingApi.Data.Hotel", b =>
                {
                    b.HasOne("HotelListingApi.Data.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
